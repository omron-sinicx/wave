theme: default # default || dark
organization: OMRON SINIC X
twitter: '@omron_sinicx'
title: 'WAVE: Worm Gear-based Adaptive Variable Elasticity for Decoupling Actuators from External Forces'
conference: IROS2025
resources:
  paper: null
  poster: null
  code: null
  video: null
  blog: null
  demo: null
  huggingface: null
description: present WAVE, a worm gear-based variable stiffness actuator that decouples external forces from actuators to achieve safe, compliant, and robust manipulation.
image: https://omron-sinicx.github.io/wave/teaser.png
url: https://omron-sinicx.github.io/wave
speakerdeck: null
authors:
  - name: Moses Gladson Selvamuthu
    affiliation: [1, 2]
    position: Intern
    url: null
  - name: Tomoya Takahashi
    affiliation: [1]
    position: Project Researcher
    url: null
  - name: Riichiro Tadakuma
    affiliation: [2]
    position: Professor
    url: null
  - name: Kazutoshi Tanaka
    affiliation: [1]
    position: Senior Researcher
    url: https://kazutoshi-tanaka.github.io/pages/index_eng.html

contact_ids: ['omron', 4] #=> github issues, contact@sinicx.com, 2nd author
affiliations:
  - OMRON SINIC X Corporation
  - Yamagata University
meta: null

bibtex: >
  @inproceedings{selvamuthu2025wave,
    author    = {Moses Gladson Selvamuthu and Tomoya Takahashi and Riichiro Tadakuma and Kazutoshi Tanaka},
    title     = {WAVE: Worm Gear-based Adaptive Variable Elasticity for Decoupling Actuators from External Forces},
    booktitle = {Proceedings of the 2025 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},
    year      = {2025},
    publisher = {IEEE}
  }

header:
  bg_curve:
    sinic_curve.png
    #  bg_image: https://github.com/omron-sinicx/swarm-body/raw/main/images/teaser.jpg

teaser: teaser.png
overview: |
  This paper introduces WAVE (Worm Gear-based Adaptive Variable Elasticity), a novel variable stiffness actuator (VSA) that employs a non-backdrivable worm gear to decouple the driving motor from external forces. By integrating compliance directly into the mechanical design, WAVE allows robots to switch continuously between high stiffness (for precise actuation and payload handling) and low stiffness (for safe interaction and impact absorption). The worm gear transmits torque for joint actuation while passively absorbing positional errors through spring deformation, effectively protecting the motor.
  The authors developed a modular WAVE unit and validated its stiffness model experimentally, showing that motor load approaches zero at rest even under external forces. Tests confirmed robust behavior under impact loads, contact tasks, and position tracking, demonstrating that manipulators equipped with WAVE can operate safely in contact-rich and high-load environments.
  While limitations such as frictional losses and worm gear locking under heavy loads remain, WAVE highlights a promising approach for safe, resilient, and versatile robotic manipulation in unstructured settings.

# body:
#   - title: Media examples
#     text: |
#       You can access media files in `public` directly like: `<img src="method.png" />` 

#       <img src="method.png" alt="" />
#       <span class="uk-text-meta">Example figcaption text</span>

#       See also [UIKit Video Components Documentation](https://getuikit.com/docs/video) and [Grid system](https://getuikit.com/docs/grid)
#       <div uk-slider>
#         <div class="uk-slider-items uk-child-width-1-1 uk-child-width-1-2@m" uk-grid>
#           <div>
#             <video
#               src="demo.mp4"
#               loop
#               muted
#               uk-video="autoplay:inview"
#               />
#           </div>
#           <div>
#             <video
#               src="demo.mp4"
#               loop
#               muted
#               uk-video="autoplay:inview"
#               />
#           </div>
#           <div>
#             <video
#               src="demo.mp4"
#               loop
#               muted
#               uk-video="autoplay:inview"
#               />
#           </div>
#         </div>
#         <div class="uk-flex uk-flex-center uk-margin-small">
#           <a class="uk-icon-button" href uk-slidenav-previous uk-slider-item="previous"></a>
#           <a class="uk-icon-button uk-margin-small-left" href uk-slidenav-next uk-slider-item="next"></a>
#         </div>
#       </div>
#   - title: Markdown examples
#     text: |
#       Here's our demo text showcasing the power of markdown and KaTeX integration!
#       Markdown allows you to easily format text using simple syntax.
#       - **bold**
#       - *italic*
#       - `inline code`.

#       You can also create headings of various levels:
#       # Heading Level 1
#       ## Heading Level 2
#       ### Heading Level 3
#       #### Heading Level 4
#       Markdown allows you to create tables like the following:
#       #### Motion Planning (MP) Dataset
#       markdown version
#       |Method|Opt|Exp|Hmean|
#       |--|--|--|--|
#       |BF| 65.8 (63.8, 68.0)| 44.1 (42.8, 45.5) | 44.8 (43.4, 46.3)|
#       |WA*| 68.4 (66.5, 70.4)| 35.8 (34.5, 37.1) | 40.4 (39.0, 41.8)|
#       |**Neural A*** | **87.7 (86.6, 88.9)**| 40.1 (38.9, 41.3) | 52.0 (50.7, 53.3)|

#       Of course, you can also directly write tables in HTML if needed. For more details, refer to the [UIKit Table documentation](https://getuikit.com/docs/table).
#       <h4>Motion Planning (MP) Dataset</h4>
#       <p>HTML version</p>
#       <div class="uk-overflow-auto">
#         <table class="uk-table uk-table-small uk-text-small uk-table-divider">
#           <thead>
#             <tr>
#               <th>Method</th>
#               <th>Opt</th>
#               <th>Exp</th>
#               <th>Hmean</th>
#             </tr>
#           </thead>
#           <tbody>
#             <tr>
#               <td>
#                 BF
#                 <br />
#                 WA*
#               </td>
#               <td>
#                 65.8 (63.8, 68.0)
#                 <br />
#                 68.4 (66.5, 70.4)
#               </td>
#               <td>
#                 44.1 (42.8, 45.5)
#                 <br />
#                 35.8 (34.5, 37.1)
#               </td>
#               <td>
#                 44.8 (43.4, 46.3)
#                 <br />
#                 40.4 (39.0, 41.8)
#               </td>
#             </tr>
#             <tr>
#               <td>
#                 SAIL
#                 <br />
#                 SAIL-SL
#                 <br />
#                 BB-A*
#               </td>
#               <td>
#                 5.7 (4.6, 6.8)
#                 <br />
#                 3.1 (2.3, 3.8)
#                 <br />
#                 31.2 (28.8, 33.5)
#               </td>
#               <td>
#                 58.0 (56.1, 60.0)
#                 <br />
#                 57.6 (55.7, 59.6)
#                 <br />
#                 52.0 (50.2, 53.9)
#               </td>
#               <td>
#                 7.7 (6.4, 9.0)
#                 <br />
#                 4.4 (3.5, 5.3)
#                 <br />
#                 31.1 (29.2, 33.0)
#               </td>
#             </tr>
#             <tr class="uk-active">
#               <td>
#                 Neural BF
#                 <br />
#                 <b>Neural A*</b>
#               </td>
#               <td>
#                 75.5 (73.8, 77.1)
#                 <br />
#                 <b>87.7 (86.6, 88.9)</b>
#               </td>
#               <td>
#                 45.9 (44.6, 47.2)
#                 <br />
#                 40.1 (38.9, 41.3)
#               </td>
#               <td>
#                 52.0 (50.7, 53.4)
#                 <br />
#                 52.0 (50.7, 53.3)
#               </td>
#             </tr>
#           </tbody>
#         </table>
#       </div>
#       <h3>Selected Path Planning Results</h3>
#       <img
#         src="assets/result1.png"
#         class="uk-align-center uk-responsive-width"
#         alt=""
#       />
#       <h3>Path Planning Results on SSD Dataset</h3>
#       <img
#         src="assets/result2.png"
#         class="uk-align-center uk-responsive-width"
#         alt=""
#       />
#   - title: KaTeX examples
#     text: >
#       $\KaTeX$ enables you to write mathematical expressions beautifully within your text (e.g. $\alpha$, $\beta$, $\gamma$ ).
#       $$ax^2 + bx + c = 0$$
#       $$ \int \oint \sum \prod $$
#       $$ \begin{CD} A @>a>> B \\ @VbVV @AAcA \\ C @= D \end{CD} $$
#       [KaTeX supports a wide range of mathematical symbols and equations](https://katex.org/docs/support_table.html), ensuring your technical content is both clear and visually appealing.
#       With markdown for text formatting and KaTeX for mathematical expressions, our template empowers you to communicate complex ideas effectively. Whether you're writing a scientific paper or a technical blog post, harnessing these tools will elevate your content and engage your readers.

# projects:
#   - title: 'maru: a miniature-sized wheeled robot for swarm robotics research'
#     journal: "CHI'24"
#     img: https://getuikit.com/docs/images/light.jpg
#     description: |
#       "maru" (= miniature assemblage adaptive robot unit) is a custom-made, miniature-sized, two-wheeled robot designed specifically for tabletop swarm robotics research.
#     url: https://github.com/omron-sinicx/swarm-body
#   - title: 'Language-Guided Pattern Formation for Swarm Robotics with Multi-Agent Reinforcement Learning'
#     journal: "IROS'24"
#     img: https://omron-sinicx.github.io/language-guided-pattern-formation/assets/teaser.png
#     description: |
#       "maru" (= miniature assemblage adaptive robot unit) is a custom-made, miniature-sized, two-wheeled robot designed specifically for tabletop swarm robotics research.
#     url: https://github.com/omron-sinicx/swarm-body
#   - title: 'Language-Guided Pattern Formation for Swarm Robotics with Multi-Agent Reinforcement Learning'
#     journal: "IROS'24"
#     img: method.png
#     description: |
#       "maru" (= miniature assemblage adaptive robot unit) is a custom-made, miniature-sized, two-wheeled robot designed specifically for tabletop swarm robotics research.
#     url: https://github.com/omron-sinicx/swarm-body
